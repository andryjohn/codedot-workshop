I"(<p>There many CSS properties that require <strong>size units</strong>:</p>

<ul>
  <li><code class="highlighter-rouge">font-size</code> defines the size of the text</li>
  <li><code class="highlighter-rouge">border-width</code> defines the weight of element borders</li>
  <li><code class="highlighter-rouge">margin</code> defines the spacing between elements</li>
  <li><code class="highlighter-rouge">left/right/top/bottom</code> allows to position and move elements</li>
</ul>

<p>The most used units are:</p>

<ul>
  <li><code class="highlighter-rouge">px</code> for pixels</li>
  <li><code class="highlighter-rouge">%</code> for percentage</li>
  <li><code class="highlighter-rouge">em</code> for sizing relative to the parent’s <code class="highlighter-rouge">font-size</code> value.</li>
</ul>

<h3 id="pixels">Pixels</h3>

<p>Because computer screens use pixels to display the content, it is the <strong>most common size unit in CSS</strong>.</p>

<p>It can be used to fix the <strong>width</strong> of an element:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">body</span><span class="p">{</span> <span class="nl">width</span><span class="p">:</span> <span class="m">400px</span><span class="p">;}</span></code></pre></figure>

<p>Or set the <strong>text size</strong>:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">body</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">20px</span><span class="p">;}</span></code></pre></figure>

<p>Pixels in CSS are straightforward because they define <strong>absolute values</strong>: they are not affected by other inherited CSS properties.</p>

<p>They are also widely used for <strong>positioning</strong> and <strong>spacing</strong> purposes.</p>

<h3 id="percentages">Percentages</h3>

<p>Percentages are <strong>relative units</strong>: they rely upon the element’s parent and/or ancestor.</p>

<p>For example, block-level elements like paragraphs naturally take up the <strong>whole width available</strong>. The following CSS rule will resize them to <strong>half</strong> of the width available.</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">p</span><span class="p">{</span> <span class="nl">width</span><span class="p">:</span> <span class="m">50%</span><span class="p">;}</span></code></pre></figure>

<p>Percentages can help set other CSS properties, like text size:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">strong</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">150%</span><span class="p">;}</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;p&gt;</span>There are <span class="nt">&lt;strong&gt;</span>important<span class="nt">&lt;/strong&gt;</span> challenges ahead of us.<span class="nt">&lt;/p&gt;</span></code></pre></figure>

<div class="result">
  <p>There are <strong style="font-size: 150%;">important</strong> challenges ahead of us.</p>
</div>

<h3 id="em">Em</h3>

<p><code class="highlighter-rouge">em</code> is a <strong>relative</strong> unit: it depends upon the value of the element’s <code class="highlighter-rouge">font-size</code>.</p>

<p>For example, if the parent has a font-size of <code class="highlighter-rouge">20px</code> and you apply <code class="highlighter-rouge">font-size: 0.8em</code> to a child element, this child element will render a font-size of <code class="highlighter-rouge">16px</code>.</p>

<p class="info">Don’t confuse the <code class="highlighter-rouge">em</code> CSS size unit and the <code class="highlighter-rouge">em</code> CSS selector, which targets <code class="highlighter-rouge">&lt;em&gt;</code> HTML elements</p>

<p>The <code class="highlighter-rouge">em</code> unit is interesting as you define font sizes of HTML elements <em>relative</em> to one another. To design a pleasing and easy to read webpage, you need consistent visual depth. For example, you want your <code class="highlighter-rouge">&lt;h1&gt;</code> to be twice as big as your body text, your <code class="highlighter-rouge">&lt;h2&gt;</code> only 1.5 times as big, and your sidebar slightly smaller. This could easily be achieved in CSS:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">body</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">16px</span><span class="p">;}</span>
<span class="nt">h1</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">2em</span><span class="p">;}</span>        <span class="c">/* = 32px */</span>
<span class="nt">h2</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">1.5em</span><span class="p">;}</span>      <span class="c">/* = 24px */</span>
<span class="nt">aside</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">0.75em</span><span class="p">;}</span>  <span class="c">/* = 12px */</span></code></pre></figure>

<p>If you decide to change the size of your body text, the relative sizes of your headings and sidebar will <strong>change accordingly</strong>, and your webpage will remain <strong>visually balanced</strong>.</p>

<p>By just changing one value, all other values are altered:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">body</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">20px</span><span class="p">;}</span>
<span class="nt">h1</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">2em</span><span class="p">;}</span>        <span class="c">/* = 40px */</span>
<span class="nt">h2</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">1.5em</span><span class="p">;}</span>      <span class="c">/* = 30px */</span>
<span class="nt">aside</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">0.75em</span><span class="p">;}</span>  <span class="c">/* = 16px */</span></code></pre></figure>

<h3 id="rem">Rem</h3>

<p>The <code class="highlighter-rouge">rem</code> unit is similar to <code class="highlighter-rouge">em</code>, but instead of depending upon the <em>parent’s</em> value, it relies upon the <strong>root element’s</strong> value, which is the <code class="highlighter-rouge"><span class="nt">&lt;html&gt;</span></code> element.</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">html</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">18px</span><span class="p">;}</span>
<span class="nt">body</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;}</span>     <span class="c">/* = 18px */</span>
<span class="nt">h1</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">2rem</span><span class="p">;}</span>       <span class="c">/* = 36px */</span>
<span class="nt">h2</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">1.5rem</span><span class="p">;}</span>     <span class="c">/* = 27px */</span></code></pre></figure>

<p>The difference between <code class="highlighter-rouge">rem</code> and <code class="highlighter-rouge">em</code> is that <code class="highlighter-rouge">rem</code> values are <strong>fixed</strong> while <code class="highlighter-rouge">em</code> values can <em>multiply</em> between each other.</p>

<p>If you set your <code class="highlighter-rouge">html{ font-size: 18px;}</code>:</p>

<ul>
  <li><code class="highlighter-rouge">2rem</code> will always be equal to <code class="highlighter-rouge">36px</code>, no matter where you use in your CSS</li>
  <li><code class="highlighter-rouge">2em</code> will always be equal to <strong>double</strong> the parent’s <code class="highlighter-rouge">font-size</code>, so not necessarily <code class="highlighter-rouge">36px</code></li>
</ul>

<p>Quick example where <code class="highlighter-rouge">2em</code> is different from <code class="highlighter-rouge">2rem</code>:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">html</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">20px</span><span class="p">;}</span>
<span class="nt">p</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">0.8rem</span><span class="p">;}</span>        <span class="c">/* = 16px */</span>
<span class="nt">p</span> <span class="nt">span</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">2em</span><span class="p">;}</span>      <span class="c">/* = 16px * 2 = 32px */</span>
<span class="nt">p</span> <span class="nt">strong</span><span class="p">{</span> <span class="nl">font-size</span><span class="p">:</span> <span class="m">2rem</span><span class="p">;}</span>   <span class="c">/* = 20px * 2 = 40px */</span></code></pre></figure>

<p>The <code class="highlighter-rouge">span</code> rely upon the <code class="highlighter-rouge">p</code> font-size value while the <code class="highlighter-rouge">strong</code> rely upon the <code class="highlighter-rouge">html</code> font-size value.</p>

<h3 id="which-unit-to-use">Which unit to use?</h3>

<p>I’d recommend <strong>pixels</strong> to start with: as they’re absolute values, they aren’t affected by the element’s context. They are straightforward, allow to set the text size, image dimensions, border width, position coordinates…</p>

<p><strong>Percentage</strong> and <strong>em</strong> values can be used alongside pixels, for relative text sizes especially.</p>
:ET