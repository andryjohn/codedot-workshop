I"-<p>We’ve seen how there are mainly <a href="/html-block-inline.html">2 types of HTML elements</a>: <strong>block-level</strong> elements and <strong>inline</strong> ones. We’ve also mentioned a few alternatives, like <strong>list-item</strong> or <strong>table-cell</strong>.</p>

<p>The <code class="highlighter-rouge">display</code> property allows to change the <em>type</em> of HTML element. By default, a paragraph <code class="highlighter-rouge">&lt;p&gt;</code> (a <strong>block-level</strong> element) will have a default <code class="highlighter-rouge">display</code> value of <code class="highlighter-rouge">block</code>, but can be rendered as an <strong>inline</strong> one:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">p</span><span class="p">{</span> <span class="nl">display</span><span class="p">:</span> <span class="nb">inline</span><span class="p">;}</span></code></pre></figure>

<h3 id="why-not-use-an-html-inline-element-like-span-then">Why not use an HTML inline element, like <code class="highlighter-rouge">&lt;span&gt;</code> then?</h3>

<p>Because you choose an HTML element for its <strong>meaning</strong>, not its rendering. If we’ve decided that a paragraph is what suited our content best, we must not change the tag <em>only for styling purposes</em>. CSS is here to take care of the styling.</p>

<p>In short, <code class="highlighter-rouge">display</code> allows to alter the <strong>type</strong> of an element <em>without</em> changing its <strong>meaning</strong>.</p>

<p>Each <code class="highlighter-rouge">display</code> options have specific rendering behaviors:</p>

<ul>
  <li><code class="highlighter-rouge">block</code> will take up the whole width available</li>
  <li><code class="highlighter-rouge">inline</code> will act as plain text</li>
  <li><code class="highlighter-rouge">inline-block</code> is, as its name suggests, a compound of block and inline behavior, a <em>“best of both worlds”</em> option</li>
  <li><code class="highlighter-rouge">list-item</code> is similar to <code class="highlighter-rouge">block</code> as it takes up the whole width available, but shows an additional bullet point</li>
  <li><code class="highlighter-rouge">table</code>, <code class="highlighter-rouge">table-row</code> and <code class="highlighter-rouge">table-cell</code> all have very specific, albeit unexpected, behavior that allow more interesting layouts</li>
</ul>

<h3 id="display-block">display: block</h3>

<p>This will turn any element into a <strong>block</strong> element.</p>

<p>This technique is often used on <strong>links</strong> in order to increase their clickable zone, which can be easily evaluated by setting a background color.</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nc">.menu</span> <span class="nt">a</span><span class="p">{</span> <span class="nl">background</span><span class="p">:</span> <span class="no">red</span><span class="p">;</span> <span class="nl">color</span><span class="p">:</span> <span class="no">white</span><span class="p">;}</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"menu"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;li&gt;</span>
    <span class="nt">&lt;a&gt;</span>Home<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>
    <span class="nt">&lt;a&gt;</span>Features<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>
    <span class="nt">&lt;a&gt;</span>Pricing<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>
    <span class="nt">&lt;a&gt;</span>About<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ul&gt;</span></code></pre></figure>

<div class="result">
  <ul>
    <li>
      <a style="background: red; color: white;">Home</a>
    </li>
    <li>
      <a style="background: red; color: white;">Features</a>
    </li>
    <li>
      <a style="background: red; color: white;">Pricing</a>
    </li>
    <li>
      <a style="background: red; color: white;">About</a>
    </li>
  </ul>
</div>

<p>If we turn these links into <strong>blocks</strong>, we increase their target area:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nc">.menu</span> <span class="nt">a</span><span class="p">{</span> <span class="nl">background</span><span class="p">:</span> <span class="no">red</span><span class="p">;</span> <span class="nl">color</span><span class="p">:</span> <span class="no">white</span><span class="p">;</span> <span class="nl">display</span><span class="p">:</span> <span class="nb">block</span><span class="p">;}</span></code></pre></figure>

<div class="result">
  <ul>
    <li>
      <a style="background: red; color: white; display: block;">Home</a>
    </li>
    <li>
      <a style="background: red; color: white; display: block;">Features</a>
    </li>
    <li>
      <a style="background: red; color: white; display: block;">Pricing</a>
    </li>
    <li>
      <a style="background: red; color: white; display: block;">About</a>
    </li>
  </ul>
</div>

<h3 id="display-inline">display: inline</h3>

<p>This turns any element into <strong>inline</strong> elements, as if they were just simple <strong>text</strong>.</p>

<p>It’s often used to create <strong>horizontal navigations</strong>, where <strong>list items</strong> are semantically but not visually useful.</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"menu"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;li&gt;</span>
    <span class="nt">&lt;a&gt;</span>Home<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>
    <span class="nt">&lt;a&gt;</span>Features<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>
    <span class="nt">&lt;a&gt;</span>Pricing<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>
    <span class="nt">&lt;a&gt;</span>About<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ul&gt;</span></code></pre></figure>

<div class="result">
  <ul>
    <li>
      <a>Home</a>
    </li>
    <li>
      <a>Features</a>
    </li>
    <li>
      <a>Pricing</a>
    </li>
    <li>
      <a>About</a>
    </li>
  </ul>
</div>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nc">.menu</span> <span class="nt">li</span><span class="p">{</span> <span class="nl">display</span><span class="p">:</span> <span class="nb">inline</span><span class="p">;}</span></code></pre></figure>

<div class="result">
  <ul>
    <li style="display: inline;">
      <a>Home</a>
    </li>
    <li style="display: inline;">
      <a>Features</a>
    </li>
    <li style="display: inline;">
      <a>Pricing</a>
    </li>
    <li style="display: inline;">
      <a>About</a>
    </li>
  </ul>
</div>

<h3 id="display-list-item">display: list-item</h3>

<p>The only HTML elements displayed as <code class="highlighter-rouge">list-item</code> are the (unsurprisingly) <strong>list items</strong> <code class="highlighter-rouge">&lt;li&gt;</code> but also the <strong>definition descriptions</strong> <code class="highlighter-rouge">&lt;dd&gt;</code>.</p>

<p>A list item is rendered with a bullet point (if in an unordered list <code class="highlighter-rouge">&lt;ul&gt;</code>) or with a incremental number (if within an ordered list <code class="highlighter-rouge">&lt;ol&gt;</code>).</p>

<p>Because the rendering of these bullet points and numbers varies across browsers, and is also hard to style in CSS, the <code class="highlighter-rouge">display: list-item</code> rule is never used. Actually, it is common for <code class="highlighter-rouge">&lt;li&gt;</code>s to be rendered as <code class="highlighter-rouge">display: block</code> or <code class="highlighter-rouge">display: inline</code>, as they are more flexible to style.</p>

<h3 id="display-none">display: none</h3>

<p>Applying <code class="highlighter-rouge">display: none;</code> to an HTML element removes it from your webpage, as if it never existed in your code.</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nc">.gone-baby-gone</span><span class="p">{</span> <span class="nl">display</span><span class="p">:</span> <span class="nb">none</span><span class="p">;}</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;p&gt;</span>Did I hear someone speaking??<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"gone-baby-gone"</span><span class="nt">&gt;</span>Hahahahahah<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p&gt;</span>I must be dreaming...<span class="nt">&lt;/p&gt;</span></code></pre></figure>

<div class="result">
  <p>Did I hear someone speaking??</p>
  <p style="display: none;">Hahahahahah</p>
  <p>I must be dreaming...</p>
</div>

<p>There are 3 paragraphs in the code, but only 2 appear, as if the 2nd one never existed.</p>

<h3 id="visibility-hidden">visibility: hidden</h3>

<p>The CSS property <code class="highlighter-rouge">visibility</code> is slightly similar to <code class="highlighter-rouge">display</code>. Applying <code class="highlighter-rouge">visibility: hidden;</code> <em>hides</em> an element from your page, but only turns it <strong>invisible</strong>: it still takes up the space it was supposed to.</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nc">.hollow-man</span><span class="p">{</span> <span class="nl">visibility</span><span class="p">:</span> <span class="nb">hidden</span><span class="p">;}</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;p&gt;</span>So far away from me <span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"hollow-man"</span><span class="nt">&gt;</span>So far i just can't see<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"hollow-man"</span><span class="nt">&gt;</span>So far away from me<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"hollow-man"</span><span class="nt">&gt;</span>You're so far away from me<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p&gt;</span>You're so far away...<span class="nt">&lt;/p&gt;</span></code></pre></figure>

<div class="result">
  <p>So far away from me </p>
  <p style="visibility: hidden;">So far i just can't see</p>
  <p style="visibility: hidden;">So far away from me</p>
  <p style="visibility: hidden;">You're so far away from me</p>
  <p>You're so far away...</p>
</div>

<p>There are 5 paragraphs in the code, only 2 appear, but the space that the hidden paragraphs were <em>supposed</em> to take is still <em>there</em>, but you can’t see them.</p>
:ET