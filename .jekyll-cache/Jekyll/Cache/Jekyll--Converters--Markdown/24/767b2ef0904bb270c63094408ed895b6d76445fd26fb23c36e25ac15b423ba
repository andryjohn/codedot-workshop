I"E<h3 id="setting-4-values">Setting 4 values</h3>

<p>When all 4 sides (top, bottom, left and right) are involved in a CSS property, that CSS property also acts as a <strong>shorthand</strong> property.</p>

<p>For example, the <code class="highlighter-rouge">padding</code> property can be used on its own to apply the <em>same</em> value to all 4 sides, but also comes in 4 variations (<code class="highlighter-rouge">padding-top</code>, <code class="highlighter-rouge">padding-bottom</code>, <code class="highlighter-rouge">padding-left</code> and <code class="highlighter-rouge">padding-right</code>) to target a specific side.</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">blockquote</span><span class="p">{</span> <span class="nl">padding</span><span class="p">:</span> <span class="m">20px</span><span class="p">;}</span>
<span class="c">/* Is equivalent to */</span>
<span class="nt">blockquote</span><span class="p">{</span> <span class="nl">padding-top</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span> <span class="nl">padding-bottom</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span> <span class="nl">padding-left</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span> <span class="nl">padding-right</span><span class="p">:</span> <span class="m">20px</span><span class="p">;}</span></code></pre></figure>

<p>But where the <code class="highlighter-rouge">padding</code> property becomes interesting, is that it can get up to <strong>4</strong> values. You can thus set a <em>different</em> value for <em>all</em> sides at once:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">blockquote</span><span class="p">{</span> <span class="nl">padding</span><span class="p">:</span> <span class="m">20px</span> <span class="m">0</span> <span class="m">10px</span> <span class="m">50px</span><span class="p">;}</span></code></pre></figure>

<p>The order is <code class="highlighter-rouge">top</code>, <code class="highlighter-rouge">right</code>, <code class="highlighter-rouge">bottom</code> and <code class="highlighter-rouge">left</code>.</p>

<h3 id="setting-2-or-3-values">Setting 2 or 3 values</h3>

<p>By putting 2 values, the first one will be applied for <code class="highlighter-rouge">top</code> and <code class="highlighter-rouge">bottom</code>, the second one for <code class="highlighter-rouge">right</code> and <code class="highlighter-rouge">left</code>:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">blockquote</span><span class="p">{</span> <span class="nl">padding</span><span class="p">:</span> <span class="m">20px</span> <span class="m">0</span><span class="p">;}</span>
<span class="c">/*
       top
       20px
left         right
 0             0
      bottom
       20px
*/</span></code></pre></figure>

<h3 id="how-to-remember-the-shorthand-order">How to remember the shorthand order</h3>

<p>There’s an easy way to remember which value will be applied.</p>

<p>Instead of focusing on the values you’ve entered, think about the values you <strong>havent’</strong>.</p>

<ul>
  <li>if you enter 2 values (top/right), you omit setting <code class="highlighter-rouge">bottom</code> and <code class="highlighter-rouge">left</code>. Because <code class="highlighter-rouge">bottom</code> is the vertical counterpart of <code class="highlighter-rouge">top</code>, it will use <code class="highlighter-rouge">top</code>’s value. And because <code class="highlighter-rouge">left</code> is the horizontal counterpart of <code class="highlighter-rouge">right</code>, it will use <code class="highlighter-rouge">right</code>’s value.</li>
  <li>if you enter 3 values (top/right/bottom), you omit setting <code class="highlighter-rouge">left</code>. As <code class="highlighter-rouge">right</code>’s counterpart, it will use its value.</li>
</ul>

<h3 id="other-properties-that-can-act-as-wheel-shorthands">Other properties that can act as “wheel” shorthands</h3>

<p>Any property that applies to all 4 sides:</p>

<ul>
  <li><code class="highlighter-rouge">margin</code></li>
  <li><code class="highlighter-rouge">padding</code></li>
  <li><code class="highlighter-rouge">border-width</code></li>
</ul>

<h4 id="so-border-is-a-shorthand-property-that-includes-border-width-which-is-another-shorthand-property">“So <code class="highlighter-rouge">border</code> is a shorthand property that includes <code class="highlighter-rouge">border-width</code> which is another shorthand property?”</h4>

<p>Indeed. <code class="highlighter-rouge">border</code> is (in that order) a shorthand for:</p>

<ul>
  <li><code class="highlighter-rouge">border-width</code></li>
  <li><code class="highlighter-rouge">border-style</code></li>
  <li><code class="highlighter-rouge">border-color</code></li>
</ul>

<p>However, you can <strong>not</strong> mix the two:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">blockquote</span><span class="p">{</span> <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="m">0</span> <span class="nb">solid</span> <span class="no">green</span><span class="p">;}</span>
<span class="c">/* Won't work */</span></code></pre></figure>

<p>But you can omit the width in <code class="highlighter-rouge">border</code> and set it separately:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">blockquote</span><span class="p">{</span> <span class="nl">border</span><span class="p">:</span> <span class="nb">solid</span> <span class="no">yellow</span><span class="p">;</span> <span class="nl">border-width</span><span class="p">:</span> <span class="m">1px</span> <span class="m">0</span><span class="p">;}</span></code></pre></figure>

:ET