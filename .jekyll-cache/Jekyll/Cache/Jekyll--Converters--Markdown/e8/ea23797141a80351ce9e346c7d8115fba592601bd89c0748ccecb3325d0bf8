I"^<p>There are 2 CSS preprocessors to choose from:</p>

<ul>
  <li><strong>Less</strong> <a href="https://lesscss.org">https://lesscss.org/</a></li>
  <li><strong>Sass</strong> <a href="https://sass-lang.com">https://sass-lang.com/</a></li>
</ul>

<p>They both have been around for several years. Weâ€™re going to use <strong>Sass</strong>.</p>

<h3 id="sass-vs-scss">Sass vs SCSS</h3>

<p>Sass has 2 <strong>syntaxes</strong> available:</p>

<ul>
  <li><strong>Sass</strong> itself (Syntactically Awesome StyleSheets) in <code class="highlighter-rouge">.sass</code> files</li>
  <li><strong>SCSS</strong> (Sassy CSS) in <code class="highlighter-rouge">.scss</code> files, which is something halfway between regular CSS and Sass</li>
</ul>

<p>The difference between Sass and SCSS is <a href="https://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax">quite subtle</a>.</p>

<p>Remember that:</p>

<ul>
  <li>Sass is the name of the preprocessor</li>
  <li>SCSS is easier to learn</li>
  <li>all resources on the internet (like <a href="https://thesassway.com/">The Sass Way</a>) mention Sass, not SCSS</li>
  <li>all features are available for both syntaxes</li>
  <li>everything in SCSS is available in Sass</li>
</ul>

<p>Weâ€™re actually going to write <strong>SCSS</strong> but still call it <strong>Sass</strong>.</p>

<h3 id="why-scss-first">Why SCSS first</h3>

<p>Weâ€™re gonna use <strong>SCSS</strong> for a few reasons:</p>

<ul>
  <li><strong>readibility</strong>: the syntax is very similar to CSS</li>
  <li><strong>learning curve</strong>: it only adds a few additional features on top of CSS</li>
  <li><strong>compatibility</strong>; a CSS file is a valid SCSS file</li>
  <li><strong>resources</strong>: lots of online articles to read and open source libraries to use</li>
  <li><strong>expandibility</strong>: itâ€™s easy to go from SCSS to Sass</li>
</ul>

<h3 id="features">Features</h3>

<p>What Sass provides<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup> is:</p>

<ul>
  <li><strong>variables</strong>: instead of repeating <code class="highlighter-rouge">#fce473</code> throughout your CSS file, just set <code class="highlighter-rouge">$yellow: #fce473</code> once</li>
  <li><strong>nesting</strong>: CSS rules can be nested within each other</li>
  <li><strong>mixins</strong>: custom functions that can accept parameters and will prevent useless repetitions</li>
  <li><strong>extensions</strong>: an easy way to inherit the same properties of another selector</li>
  <li><strong>operators</strong>: adding/substracting/multiplying/dividing values, like <code class="highlighter-rouge">960px / 4</code> or <code class="highlighter-rouge">$space * 2</code></li>
</ul>

<h3 id="dry-code">DRY code</h3>

<p>Everything about Sass is to provide tools to <strong>prevent repeating yourself</strong> in your code: itâ€™s the <a href="https://en.wikipedia.org/wiki/Don't_repeat_yourself">DRY principle</a>, which stands for <em>Donâ€™t repeat yourself</em>.</p>

<ul>
  <li><strong>variables</strong> prevents repeating <em>values</em></li>
  <li><strong>nesting</strong> prevents repeating <em>selectors</em></li>
  <li><strong>mixins</strong> and <strong>extensions</strong> prevent repeating <em>properties</em></li>
</ul>

<h3 id="installing-sass">Installing Sass</h3>

<p>Head towards <a href="https://sass-lang.com/install">https://sass-lang.com/install</a> to install Sass on your computer.</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>and any CSS preprocessor for that matter, but Iâ€™ll refer to Sass only from now on.Â <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET