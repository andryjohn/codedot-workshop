I"R"<p>As the Web grew in popularity in the 90s, the intent to apply a specific design to a website grew as well. Web developers relied upon specific HTML tags to enhance webpages:</p>

<ul>
  <li><code class="highlighter-rouge">&lt;basefont&gt;</code> defined a font for a whole HTML document</li>
  <li><code class="highlighter-rouge">&lt;font&gt;</code> defined a typeface, a color, and a size for the text it contains</li>
  <li><code class="highlighter-rouge">&lt;center&gt;</code> horizontally centered all its content</li>
  <li><code class="highlighter-rouge">&lt;big&gt;</code> increased the size of the text</li>
  <li><code class="highlighter-rouge">&lt;strike&gt;</code> rendered text with a strikethrough</li>
</ul>

<p>Several HTML attributes could also be used:</p>

<ul>
  <li><code class="highlighter-rouge">bgcolor</code> defined a background color on the element</li>
  <li><code class="highlighter-rouge">text</code> defined the text color</li>
  <li>several <code class="highlighter-rouge">margin</code> attributes could be used to add space on any side of the element</li>
</ul>

<h3 id="why-avoid-tables">Why avoid tables</h3>

<p>But most of all, in order to create columns, visually align elements, and generally position elements relatively to each other, Web developers used the <code class="highlighter-rouge">&lt;table&gt;</code> element to design their webpages because it naturally provided a visual <strong>grid</strong>:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;table&gt;</span>
  <span class="nt">&lt;thead&gt;</span>
    <span class="nt">&lt;tr&gt;</span>
      <span class="nt">&lt;th&gt;</span>Logo<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">colspan=</span><span class="s">"2"</span><span class="nt">&gt;</span>Tagline<span class="nt">&lt;/th&gt;</span>
    <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;/thead&gt;</span>
  <span class="nt">&lt;tfoot&gt;</span>
    <span class="nt">&lt;tr&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">colspan=</span><span class="s">"3"</span><span class="nt">&gt;</span>Copyright 2015<span class="nt">&lt;/th&gt;</span>
    <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;/tfoot&gt;</span>
  <span class="nt">&lt;tbody&gt;</span>
    <span class="nt">&lt;tr&gt;</span>
      <span class="nt">&lt;td&gt;</span>Left menu<span class="nt">&lt;/td&gt;</span>
      <span class="nt">&lt;td&gt;</span>Main content<span class="nt">&lt;/td&gt;</span>
      <span class="nt">&lt;td&gt;</span>Right sidebar<span class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;/tbody&gt;</span>
<span class="nt">&lt;/table&gt;</span></code></pre></figure>

<p>This approach was cumbersome for several reasons:</p>

<ul>
  <li>HTML tables are <strong>verbose</strong>: they require a lot of boilerplate code</li>
  <li>the markup was <strong>semantically wrong</strong>: tables should be used for multidimensional data</li>
  <li>changing the layout required to change the markup: if we wanted to move the left column to the right, we had to <strong>modify the HTML structure</strong></li>
  <li>tables were prone to <strong>syntax errors</strong>: rows and cells need to be ordered and nested in a specific way to be valid</li>
  <li>the markup was <strong>unreadable</strong>: tables were nested within tables to provide additional columns <em>within</em> columns</li>
</ul>

<p>That is why using tables <em>for layout purposes</em> was slowly abandoned, and CSS was used instead.</p>

<h3 id="what-css-is">What CSS is</h3>

<p><strong>CSS</strong> stands for <strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets. Its purpose is to <em>style</em> markup languages (like HTML or XML). Therefore, CSS is worthless on its own, unless associated with an HTML document.</p>

<p>CSS brings an HTML document to <strong>life</strong>, by choosing fonts, applying colors, defining margins, positioning elements, animating interactions, and much more.</p>

<h3 id="how-css-works">How CSS works</h3>

<p>How CSS works is by <strong>selecting</strong> an HTML element (like a paragraph), choosing a <strong>property</strong> to alter (like the color), and applying a certain <strong>value</strong> (like red):</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">p</span><span class="p">{</span> <span class="nl">color</span><span class="p">:</span> <span class="no">red</span><span class="p">;}</span></code></pre></figure>

<p class="info">The word <em>“Style”</em> can be deceiving. You might think CSS is only used to change the text’s color, size, and font. But CSS is able to define an HTML document’s <strong>layout</strong>, by defining heights, widths, inner and outer margins, positions, columns…</p>

<h3 id="where-do-i-write-css">Where do I write CSS?</h3>

<h4 id="css-as-an-attribute">CSS as an attribute</h4>

<p>You can write CSS directly on an HTML elements, by using the <code class="highlighter-rouge">style</code> attribute:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;p</span> <span class="na">style=</span><span class="s">"color: red;"</span><span class="nt">&gt;</span>This text is important.<span class="nt">&lt;/p&gt;</span></code></pre></figure>

<h4 id="css-in-the-head">CSS in the &lt;head&gt;</h4>

<p>You can use a <code class="highlighter-rouge">&lt;style&gt;</code> tag in the <code class="highlighter-rouge">&lt;head&gt;</code> of your HTML document:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>Hello World<span class="nt">&lt;/title&gt;</span>
    <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">"text/css"</span><span class="nt">&gt;</span>
      <span class="nt">p</span><span class="p">{</span> <span class="nl">color</span><span class="p">:</span> <span class="no">red</span><span class="p">;}</span>
    <span class="nt">&lt;/style&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;p&gt;</span>This paragraph will be red.<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span></code></pre></figure>

<h4 id="css-in-a-separate-file">CSS in a separate file</h4>

<p>You can write your CSS in a separate file with a <code class="highlighter-rouge">.css</code> extension, and then link it to your HTML by using the <code class="highlighter-rouge">&lt;link&gt;</code> HTML tag.</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">p</span><span class="p">{</span> <span class="nl">color</span><span class="p">:</span> <span class="no">red</span><span class="p">;}</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>Hello World<span class="nt">&lt;/title&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">type=</span><span class="s">"text/css"</span> <span class="na">href=</span><span class="s">"style.css"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;p&gt;</span>This paragraph will be red.<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span></code></pre></figure>

<p>It is the HTML document who “calls” the CSS file, in this case a file called <code class="highlighter-rouge">style.css</code> located in the same folder as the HTML file.</p>

<p>This <strong>3rd method</strong> of using a separate CSS file is <strong>preferred</strong>.</p>

<h3 id="why-not-style-directly-in-the-html">Why not style directly in the HTML?</h3>

<p>Because we want to separate the <strong>content</strong> (HTML) from its <strong>presentation</strong> (CSS).</p>

<p>If you want to visualize the purpose of this distinction, head towards the wonderful <a href="https://www.csszengarden.com/">CSS Zen Garden</a>: each design uses the <em>exact</em> same HTML but a <em>different</em> CSS each time.</p>

<p>It makes <strong>maintenance</strong> easier as well: the same CSS file can be used for a whole website. It provides <strong>flexiblity</strong>: focus on the content on one side, the styling on the other. SEO purposes, different concerns.</p>
:ET